#
# Copyright IBM Corp All Rights Reserved
#
# SPDX-License-Identifier: Apache-2.0
#
version: '2'

networks:
  demo:
 
services:
     
  orderer.aufsicht.de:
    container_name: orderer.aufsicht.de
    image: hyperledger/fabric-orderer
    environment:
      - ORDERER_GENERAL_LOGLEVEL=debug
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_GENESISFILE=/etc/hyperledger/configtx/vertraulich.block
      - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
      - ORDERER_GENERAL_LOCALMSPDIR=/etc/hyperledger/msp/orderer/msp
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
    command: orderer
    ports:
      - 7050:7050
    volumes:
        - ./config/:/etc/hyperledger/configtx
        - ./crypto-config/ordererOrganizations/aufsicht.de/orderers/orderer.aufsicht.de/:/etc/hyperledger/msp/orderer
        - ./crypto-config/peerOrganizations/amt1.aufsicht.de/peers/peer1.amt1.aufsicht.de/:/etc/hyperledger/msp/peerOrg1
        - ./crypto-config/peerOrganizations/amt2.aufsicht.de/peers/peer1.amt2.aufsicht.de/:/etc/hyperledger/msp/peerOrg2
        - ./crypto-config/peerOrganizations/amt3.aufsicht.de/peers/peer1.amt3.aufsicht.de/:/etc/hyperledger/msp/peerOrg3
    networks:
      - demo
      
  ca1:
    container_name: ca_amt1
    image: hyperledger/fabric-ca
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_CA_NAME=ca-amt1
      - FABRIC_CA_SERVER_TLS_ENABLED=true
      - FABRIC_CA_SERVER_TLS_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.amt1.aufsicht.de-cert.pem
      - FABRIC_CA_SERVER_TLS_KEYFILE=/etc/hyperledger/fabric-ca-server-config/0dec23d775a91689b623501e840f420969923b197cbce4003dab8fe2d49706ce_sk
    ports:
      - "7054:7054"
    command: sh -c 'fabric-ca-server start --ca.certfile /etc/hyperledger/fabric-ca-server-config/ca.amt1.aufsicht.de-cert.pem --ca.keyfile /etc/hyperledger/fabric-ca-server-config/0dec23d775a91689b623501e840f420969923b197cbce4003dab8fe2d49706ce_sk -b admin:adminpw -d'
    volumes:
      - ./crypto-config/peerOrganizations/amt1.aufsicht.de/ca/:/etc/hyperledger/fabric-ca-server-config
    networks:
      - demo
 
  ca2:
    container_name: ca_amt2
    image: hyperledger/fabric-ca
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_CA_NAME=ca-amt2
      - FABRIC_CA_SERVER_TLS_ENABLED=true
      - FABRIC_CA_SERVER_TLS_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.amt2.aufsicht.de-cert.pem
      - FABRIC_CA_SERVER_TLS_KEYFILE=/etc/hyperledger/fabric-ca-server-config/c75de38fd5c4a18fa7eb00772f1651e5d884531c79a9c7ab5b95130a1b2e2eb9_sk
    ports:
      - "8054:7054"
    command: sh -c 'fabric-ca-server start --ca.certfile /etc/hyperledger/fabric-ca-server-config/ca.amt2.aufsicht.de-cert.pem --ca.keyfile /etc/hyperledger/fabric-ca-server-config/c75de38fd5c4a18fa7eb00772f1651e5d884531c79a9c7ab5b95130a1b2e2eb9_sk -b admin:adminpw -d'
    volumes:
      - ./crypto-config/peerOrganizations/amt2.aufsicht.de/ca/:/etc/hyperledger/fabric-ca-server-config
    networks:
      - demo

  ca3:
    container_name: ca_amt3
    image: hyperledger/fabric-ca
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_CA_NAME=ca-amt3
      - FABRIC_CA_SERVER_TLS_ENABLED=true
      - FABRIC_CA_SERVER_TLS_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.amt3.aufsicht.de-cert.pem
      - FABRIC_CA_SERVER_TLS_KEYFILE=/etc/hyperledger/fabric-ca-server-config/c92c1a168447216900d5273fddf59db0b8be93dbc3df1d9c8fea5a4a8debd073_sk
    ports:
      - "9054:7054"
    command: sh -c 'fabric-ca-server start --ca.certfile /etc/hyperledger/fabric-ca-server-config/ca.amt3.aufsicht.de-cert.pem --ca.keyfile /etc/hyperledger/fabric-ca-server-config/c92c1a168447216900d5273fddf59db0b8be93dbc3df1d9c8fea5a4a8debd073_sk -b admin:adminpw -d'
    volumes:
      - ./crypto-config/peerOrganizations/amt3.aufsicht.de/ca/:/etc/hyperledger/fabric-ca-server-config
    networks:
      - demo        
   
  peer1.amt1.aufsicht.de:
    container_name: peer1.amt1.aufsicht.de
    image: hyperledger/fabric-peer
    environment:
      - CORE_PEER_ADDRESSAUTODETECT=true
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_PEER_ID=peer1.amt1.aufsicht.de
      - CORE_LOGGING_PEER=debug
      - CORE_CHAINCODE_LOGGING_LEVEL=DEBUG
      - CORE_PEER_LOCALMSPID=Org1MSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/peer/
      - CORE_PEER_ADDRESS=peer1.amt1.aufsicht.de:7051
      # # the following setting starts chaincode containers on the same
      # # bridge network as the peers
      # # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}_basic
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb:5984
      # The CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME and CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD
      # provide the credentials for ledger to connect to CouchDB.  The username and password must
      # match the username and password set for the associated CouchDB.
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=admin
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=password
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    #command: peer node start
    command: peer node start --peer-chaincodedev=true
    ports:
      - 7051:7051
      - 7053:7053
    volumes:
        - /var/run/:/host/var/run/
        - ./crypto-config/peerOrganizations/amt1.aufsicht.de/peers/peer1.amt1.aufsicht.de/msp:/etc/hyperledger/msp/peer
        - ./crypto-config/peerOrganizations/amt1.aufsicht.de/users:/etc/hyperledger/msp/users
        - ./config:/etc/hyperledger/configtx
    depends_on:
      - orderer.aufsicht.de
      - couchdb
    networks:
      - demo
      
  peer1.amt2.aufsicht.de:
    container_name: peer1.amt2.aufsicht.de
    image: hyperledger/fabric-peer
    environment:
      - CORE_PEER_ADDRESSAUTODETECT=true
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_PEER_ID=peer1.amt2.aufsicht.de
      - CORE_LOGGING_PEER=debug
      - CORE_CHAINCODE_LOGGING_LEVEL=DEBUG
      - CORE_PEER_LOCALMSPID=Org2MSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/peer/
      - CORE_PEER_ADDRESS=peer1.amt2.aufsicht.de:7051
      # # the following setting starts chaincode containers on the same
      # # bridge network as the peers
      # # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}_basic
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb:5984
      # The CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME and CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD
      # provide the credentials for ledger to connect to CouchDB.  The username and password must
      # match the username and password set for the associated CouchDB.
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=admin
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=password
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: peer node start
    # command: peer node start --peer-chaincodedev=true
    ports:
      - 8051:7051
      - 8053:7053
    volumes:
        - /var/run/:/host/var/run/
        - ./crypto-config/peerOrganizations/amt2.aufsicht.de/peers/peer1.amt2.aufsicht.de/msp:/etc/hyperledger/msp/peer
        - ./crypto-config/peerOrganizations/amt2.aufsicht.de/users:/etc/hyperledger/msp/users
        - ./config:/etc/hyperledger/configtx
    depends_on:
      - orderer.aufsicht.de
      - couchdb
    networks:
      - demo
      
  peer1.amt3.aufsicht.de:
    container_name: peer1.amt3.aufsicht.de
    image: hyperledger/fabric-peer
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_PEER_ID=peer1.amt3.aufsicht.de
      - CORE_LOGGING_PEER=debug
      - CORE_CHAINCODE_LOGGING_LEVEL=DEBUG
      - CORE_PEER_LOCALMSPID=Org3MSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/peer/
      - CORE_PEER_ADDRESS=peer1.amt3.aufsicht.de:7051
      # # the following setting starts chaincode containers on the same
      # # bridge network as the peers
      # # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}_basic
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb:5984
      # The CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME and CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD
      # provide the credentials for ledger to connect to CouchDB.  The username and password must
      # match the username and password set for the associated CouchDB.
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=admin
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=password
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: peer node start
    # command: peer node start --peer-chaincodedev=true
    ports:
      - 9051:7051
      - 9053:7053
    volumes:
        - /var/run/:/host/var/run/
        - ./crypto-config/peerOrganizations/amt3.aufsicht.de/peers/peer1.amt3.aufsicht.de/msp:/etc/hyperledger/msp/peer
        - ./crypto-config/peerOrganizations/amt3.aufsicht.de/users:/etc/hyperledger/msp/users
        - ./config:/etc/hyperledger/configtx
    depends_on:
      - orderer.aufsicht.de
      - couchdb
    networks:
      - demo

  couchdb:
    container_name: couchdb
    image: hyperledger/fabric-couchdb
    # Populate the COUCHDB_USER and COUCHDB_PASSWORD to set an admin user and password
    # for CouchDB.  This will prevent CouchDB from operating in an "Admin Party" mode.
    environment:
      - COUCHDB_USER=admin
      - COUCHDB_PASSWORD=password
    ports:
      - 5984:5984
    networks:
      - demo

  cli:
    container_name: cli
    image: hyperledger/fabric-tools
    tty: true
    environment:
      - GOPATH=/opt/gopath
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_LOGGING_LEVEL=DEBUG
      - CORE_PEER_ID=cli
      - CORE_PEER_ADDRESS=peer1.amt1.aufsicht.de:7051
      - CORE_PEER_LOCALMSPID=Org1MSP
      - CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/amt1.aufsicht.de/users/Admin@amt1.aufsicht.de/msp
      - CORE_CHAINCODE_KEEPALIVE=10
    working_dir: /opt/gopath/src/docutracker
    command:  /bin/bash
    volumes:
        - /var/run/:/host/var/run/
        - ./../chaincode/:/opt/gopath/src/github.com/
        - ./crypto-config:/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/
        - ./config:/etc/hyperledger/configtx/
        - ./go/src/docutracker/:/opt/gopath/src/docutracker/
    networks:
        - demo
    depends_on:
      - orderer.aufsicht.de
      - peer1.amt1.aufsicht.de
      - peer1.amt2.aufsicht.de
      - peer1.amt3.aufsicht.de
      - couchdb
      
      
  mysql:
    container_name: mysql
    image: mysql:latest
    environment:
      - MYSQL_ROOT_PASSWORD=123456
      - MYSQL_ROOT_HOST=%
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
    ports:
      - 3306:3306
    volumes:
       - /var/run/:/host/var/run/
       - ../db/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
       - ./custom.cnf:/etc/mysql/conf.d/custom.cnf
    networks:
       - demo
      
  node:
    container_name: node
    image: node:6.9-alpine
    working_dir: /home/node/app
    environment:
      - NODE_ENV=development
    volumes:
      - ../node:/home/node/app
      - ../Schoenhofer/crypto-config:/home/node/crypto-config
    ports:
      - 8080:8080
    command: [sh, -c, "apk --no-cache add --virtual native-deps g++ gcc libgcc libstdc++ linux-headers make python && npm install node-gyp -g && npm install && cd /home/node/app && ./monitor.sh"]
    networks:
      - demo
    depends_on:
      - mysql
      
  fabric-rest:
    container_name: fabric-rest
    image: fabric-rest:latest
    working_dir: /
    ports:
      - 3000:3000
    command: node node_modules/fabric-rest -d
    volumes:
      - ./crypto-config:/creds
      - ./fabric-rest/config.json:/node_modules/fabric-rest/server/config.json
      - ./fabric-rest/datasources.json:/node_modules/fabric-rest/server/datasources.json
    networks:
      - demo
    depends_on:
      - orderer.aufsicht.de
      
  webserver:
    container_name: webserver
    image: nginx:latest
    ports:
      - 80:80
    volumes:
      - ../../Website_Demo:/usr/share/nginx/html
    networks:
      - demo
    depends_on:
      - orderer.aufsicht.de